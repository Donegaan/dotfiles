#bash
if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
    export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

tput sgr0
LIGHTRED=$(tput setaf 9)
RED=$(tput setaf 124);
VIOLET=$(tput setaf 61);
ORANGE=$(tput setaf 172)
PURPLE=$(tput setaf 141)
BLUE=$(tput setaf 33)
CYAN=$(tput setaf 37)
GREEN=$(tput setaf 64)
WHITE=$(tput setaf 256)
BOLD=$(tput bold)
RESET=$(tput sgr0)

function git_info() {
	# check if we're in a git repo
	git rev-parse --is-inside-work-tree &>/dev/null || return
	# quickest check for what branch we're on
	branch=$(git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||')
	# check if it's dirty (via github.com/sindresorhus/pure)
	dirty=$(git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ]&& echo -e "*")
	echo $RESET" on "$LIGHTRED$branch$dirty
}

# Only show username/host if not default
function usernamehost() {
	if [ "$SSH_TTY" ]; then
		echo "${PURPLE}$USER@$HOSTNAME${RESET}:";
	fi
}

PS1="\[\e]2;$PWD\[\a\]\[\e]1;\]$(basename "$(dirname "$PWD")")/\W\[\a\]\$(usernamehost)\[$BLUE\]\w\$(git_info)\[$RESET\]\n☈ "

#ϟ⩥৯